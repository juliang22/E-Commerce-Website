{"version":3,"sources":["reportWebVitals.js","components/Footer.js","context/AuthContext.js","components/Header.js","util/queries.js","components/ErrorMessage.js","components/Rating.js","components/Product.js","components/SearchBox.js","components/ProductCarousel.js","components/Meta.js","pages/HomePage.js","context/CartContext.js","components/Review.js","pages/ProductPage.js","components/FormContainer.js","pages/LoginPage.js","pages/CartPage.js","pages/RegisterPage.js","pages/ProfilePage.js","util/AuthRoute.js","components/CheckoutSteps.js","pages/ShippingPage.js","pages/PaymentPage.js","pages/PlaceOrderPage.js","pages/OrderPage.js","adminPages/UserListPage.js","util/AdminRoute.js","adminPages/ProductListPage.js","components/ProductForm.js","adminPages/EditProductPage.js","adminPages/CreateProductPage.js","adminPages/OrderListPage.js","App.js","ApolloProvider.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Footer","Container","Row","Col","className","AuthContext","createContext","initialState","user","decodeToken","token","localStorage","getItem","isAdmin","decodedToken","jwtDecode","console","log","exp","Date","now","setItem","removeItem","AuthReducer","state","action","type","payload","AuthContextProvider","props","useReducer","authDispatch","Provider","value","login","update","logout","clear","Header","useContext","client","clearStore","cache","gc","to","Navbar","bg","variant","expand","collapseOnSelect","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","username","Item","onClick","e","preventDefault","logoutHandler","FETCH_PRODUCT_QUERY","gql","FETCH_PRODUCTS_QUERY","GET_TOP_PRODUCTS","DELETE_PRODUCT","CREATE_PRODUCT","EDIT_PRODUCT","LOGIN_USER","REGISTER_USER","UPDATE_USER_PROFILE","CREATE_ORDER","GET_PAYPAL_CLIENTID","FETCH_USER_ORDERS_QUERY","FETCH_ORDER_QUERY","FETCH_ALL_ORDERS_QUERY","FETCH_USER_LIST","DELETE_USER","EDIT_ADMIN_STATUS","EDIT_DELIVERY_STATUS","CREATE_REVIEW","ErrorMessage","error","Alert","JSON","stringify","message","split","map","charAt","length","slice","defaultProps","Rating","numReviews","color","stars","Array","fill","_","i","count","style","Math","random","Product","product","Card","image","Img","src","width","duration","height","Body","Title","as","name","rating","Text","price","SearchBox","setQuery","Form","onSubmit","inline","Control","onChange","target","placeholder","outline","borderWidth","Button","ProductCarousel","useQuery","data","loading","Carousel","pause","marginBottom","getTopProducts","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","fetchMore","loadingData","useState","query","products","getProducts","fuse","Fuse","shouldSort","threshold","distance","keys","search","item","box","sm","md","lg","xl","onEnter","variables","_id","updateQuery","prev","fetchMoreResult","CartContext","cartReducer","draft","cartItems","hasOwnProperty","qty","Number","Object","reduce","newObj","key","shippingAddress","paymentInfo","payment","initialCartState","parse","CartContextProvider","useImmerReducer","cartState","cartDispatch","addToCart","updateCart","deleteCart","saveAddress","address","savePaymentMethod","Review","reviews","productID","setRating","comment","setComment","reviewSubmitted","setReviewSubmitted","useMutation","refetchQueries","onCompleted","success","onError","err","submitReview","ListGroup","review","createdAt","toDateString","Group","controlId","Label","row","ProductPage","history","match","params","queryError","getProduct","countInStock","setQty","setError","quantityExceedStock","col","display","x","disabled","push","textAlign","addToCartHandler","FormContainer","children","xs","LoginScreen","location","email","setEmail","errors","setErrors","password","setPassword","result","loginUser","CartPage","values","rounded","acc","itm","toFixed","RegisterScreen","setUsername","confirmPassword","setConfirmPassword","registerUser","ProfilePage","newUsername","setNewUsername","newEmail","setNewEmail","setSuccess","updateUserProfile","updateProfile","getUserOrders","Table","striped","bordered","hover","responsive","orderItems","paymentMethod","taxPrice","shippingPrice","totalPrice","paymentResult","isDelivered","deliveredAt","paidAt","substring","AuthRoute","Component","component","redirect","rest","adminRoute","render","CheckoutSteps","step1","step2","step3","step4","ShippingPage","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderPage","paypalLoading","sdkReady","setSDKReady","checkoutError","setCheckoutError","useEffect","clientID","getPayPalClientID","script","document","createElement","async","onload","body","appendChild","createOrder","pathname","justOrdered","varian","addDecimals","num","round","orderInfo","itemsPrice","index","amount","onSuccess","emailAddress","payer","email_address","update_time","paymentID","margin","OrderPage","loggedInUser","setJustOrdered","orderID","editDeliveryStatus","getUserOrder","textIndent","whiteSpace","qtyOrdered","UserListScreen","toggleAdmin","setMessage","deleteUser","prevUsers","readQuery","getUsers","writeQuery","filter","onClose","dismissible","href","marginRight","window","confirm","AdminRoute","ProductListScreen","prevProducts","prod","deleteProduct","category","brand","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","ProductForm","submitHandler","setName","setPrice","setImage","files","setFiles","setBrand","setCategory","setCountInStock","setDescription","file","onupdatefiles","allowMultiple","labelIdle","EditProducePage","editProduct","undefined","CreateProductPage","createProduct","OrderListPage","getOrders","order","App","exact","path","HomePage","LoginPage","RegisterPage","PaymentPage","ProductListPage","EditProductPage","handleError","graphQLErrors","networkError","locations","httplink","createUploadLink","uri","credentials","authLink","setContext","headers","authorization","links","from","concat","ApolloClient","link","InMemoryCache","ReactDOM","ApolloProvider","getElementById"],"mappings":"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","file":"static/js/main.f981e763.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst Footer = () => {\n\treturn (\n\t\t<footer>\n\t\t\t<Container >\n\t\t\t\t<Row>\n\t\t\t\t\t<Col className='text-center py-3'>\n\t\t\t\t\t\tCopyright &copy; ProShop\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t</footer>\n\t)\n}\n\nexport default Footer\n","import React, { useReducer, createContext } from 'react'\nimport jwtDecode from 'jwt-decode'\n\nconst AuthContext = createContext()\nconst initialState = { user: null }\n\n// This will run whenever the page gets refreshed or user logs in\nconst decodeToken = (token = localStorage.getItem('UserToken'), isAdmin = (localStorage.getItem('isAdmin') === 'true')) => {\n\tif (token) {\n\t\tconst decodedToken = jwtDecode(token)\n\t\tconsole.log(decodedToken)\n\t\tif (decodedToken.exp * 1000 < Date.now) { //checking expiration date of decoded token\n\t\t\tlocalStorage.removeItem('UserToken')\n\t\t} else {\n\t\t\tinitialState.user = { ...decodedToken, isAdmin }\n\t\t\tlocalStorage.setItem('isAdmin', isAdmin)\n\t\t\treturn initialState.user\n\t\t}\n\t}\n}\ndecodeToken()\n\nconst AuthReducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase \"LOGIN\":\n\t\t\tconst token = decodeToken(action.payload.token, action.payload.isAdmin)\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuser: token\n\t\t\t}\n\t\tcase \"LOGOUT\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuser: null\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nconst AuthContextProvider = (props) => {\n\tconst [state, authDispatch] = useReducer(AuthReducer, initialState)\n\n\tconst update = (user) => {\n\t\tlocalStorage.setItem('UserToken', user.token)\n\t\tauthDispatch({\n\t\t\ttype: \"UPDATE\",\n\t\t\tpayload: user\n\t\t})\n\t}\n\n\tconst login = (user) => {\n\t\tlocalStorage.setItem('UserToken', user.token)\n\t\tauthDispatch({\n\t\t\ttype: \"LOGIN\",\n\t\t\tpayload: user\n\t\t})\n\t}\n\n\t// TODO: Make it so different users can log in and out and keep cart context\n\tconst logout = () => {\n\t\tlocalStorage.clear();\n\t\tauthDispatch({\n\t\t\ttype: \"LOGOUT\"\n\t\t})\n\t}\n\n\treturn (\n\t\t<AuthContext.Provider value={{ user: state.user, login, update, logout }} {...props} />\n\t)\n}\n\nexport { AuthContext, AuthContextProvider }","import React, { useContext } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Navbar, Container, Nav, NavDropdown } from 'react-bootstrap'\nimport { Redirect } from 'react-router-dom';\nimport { ApolloConsumer } from '@apollo/client'\n\nimport { AuthContext } from '../context/AuthContext'\n\n\nconst Header = () => {\n\tconst { user, logout } = useContext(AuthContext)\n\n\tconst logoutHandler = (e) => {\n\t\te.preventDefault()\n\t\tlogout()\n\t}\n\n\tconst userDropdown = () => (\n\t\t<>\n\t\t\t<LinkContainer to='/cart'>\n\t\t\t\t<Nav.Link><i className='fas fa-shopping-cart'></i> Cart</Nav.Link>\n\t\t\t</LinkContainer>\n\t\t\t<NavDropdown title={user.username}>\n\t\t\t\t<LinkContainer to='/profile'>\n\t\t\t\t\t<NavDropdown.Item> <i className='fas fa-user py-3'></i>\n\t\t\t\t&nbsp;&nbsp;Profile\n\t\t\t\t</NavDropdown.Item>\n\t\t\t\t</LinkContainer>\n\t\t\t\t<NavDropdown.Item onClick={e => logoutHandler(e)}>\n\t\t\t\t\t<i className=\"fas fa-sign-out-alt\"></i>\n\t\t\t&nbsp;&nbsp;Logout\n\t\t\t</NavDropdown.Item>\n\t\t\t</NavDropdown>\n\t\t</>\n\t)\n\n\treturn (\n\t\t<header>\n\t\t\t{user ?\n\t\t\t\tfalse : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{/* Clear cache and logout */}\n\t\t\t\t\t\t<ApolloConsumer>\n\t\t\t\t\t\t\t{client => {\n\t\t\t\t\t\t\t\tclient.clearStore()\n\t\t\t\t\t\t\t\tclient.cache.gc()\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</ApolloConsumer>\n\t\t\t\t\t\t<Redirect to='/login' />\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t\t}\n\t\t\t<Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>\n\t\t\t\t<Container>\n\t\t\t\t\t<LinkContainer to='/'>\n\t\t\t\t\t\t<Navbar.Brand>ProShop</Navbar.Brand>\n\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\t\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t\t\t\t<Nav className=\"ml-auto\">\n\t\t\t\t\t\t\t{user ?\n\t\t\t\t\t\t\t\tuserDropdown()\n\t\t\t\t\t\t\t\t: (\n\t\t\t\t\t\t\t\t\t<LinkContainer to=\"/login\">\n\t\t\t\t\t\t\t\t\t\t<Nav.Link ><i className='fas fa-user'></i> Login</Nav.Link>\n\t\t\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{user?.isAdmin &&\n\t\t\t\t\t\t\t\t<NavDropdown title='Admin' id='adminmenu'>\n\t\t\t\t\t\t\t\t\t<LinkContainer to='/admin/userlist'>\n\t\t\t\t\t\t\t\t\t\t<NavDropdown.Item>\n\t\t\t\t\t\t\t\t\t\t\t<i className='fas fa-users py-3'></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;User List\n\t\t\t\t\t\t\t\t\t\t\t\t</NavDropdown.Item>\n\t\t\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t\t\t\t<LinkContainer to='/admin/productslist'>\n\t\t\t\t\t\t\t\t\t\t<NavDropdown.Item>\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-gift py-3\"></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;Product List\n\t\t\t\t\t\t\t\t\t\t\t\t\t</NavDropdown.Item>\n\t\t\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t\t\t\t<LinkContainer to='/admin/orderslist'>\n\t\t\t\t\t\t\t\t\t\t<NavDropdown.Item>\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-clipboard-list py-3\"></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;Order List\n\t\t\t\t\t\t\t\t\t\t\t\t\t</NavDropdown.Item>\n\t\t\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t\t\t</NavDropdown>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Nav>\n\t\t\t\t\t</Navbar.Collapse>\n\t\t\t\t</Container>\n\t\t\t</Navbar>\n\t\t</header>\n\t)\n}\n\nexport default Header\n","import gql from \"graphql-tag\"\n\nexport const FETCH_PRODUCT_QUERY = gql`\n\tquery($productID: ID!) {\n\t\tgetProduct(productID: $productID) {\n\t\t\tname\n\t\t\timage\n\t\t\tdescription\n\t\t\tbrand\n\t\t\tcategory\n\t\t\tprice\n\t\t\tcountInStock\n\t\t\trating\n\t\t\tnumReviews\n\t\t\tid\n\t\t\treviews {username, rating, comment, createdAt}\n\t\t}\n\t}\n`\n\nexport const FETCH_PRODUCTS_QUERY = gql`\n\tquery($_id: ID){\n\t\tgetProducts(_id: $_id) {\n\t\tname\n\t\timage\n\t\tdescription\n\t\tbrand\n\t\tcategory\n\t\tprice\n\t\tcountInStock\n\t\trating\n\t\tnumReviews\n\t\tid\n\t\t}\n  }\n`\n\nexport const GET_TOP_PRODUCTS = gql`\n\t{\n\t\tgetTopProducts {\n\t\t\tname\n\t\t\timage\n\t\t\tprice\n\t\t\tid\n\t\t}\n  }\n`\n\nexport const DELETE_PRODUCT = gql`\n  mutation deleteProduct($id: ID!) {\n\tdeleteProduct(id: $id) \n  }\n`;\n\nexport const CREATE_PRODUCT = gql`\n  mutation createProduct(\n\t \t$name: String!\n\t\t$image: Upload!\n\t\t$description: String!\n\t\t$brand: String!\n\t\t$category: String!\n\t\t$price: Float!\n\t\t$countInStock: Int!\n  ) {\n\tcreateProduct(\n\t \tname: $name\n\t\timage: $image\n\t\tdescription: $description\n\t\tbrand: $brand\n\t\tcategory: $category\n\t\tprice: $price\n\t\tcountInStock: $countInStock\n\t) {\n\t\tname\n\t\timage\n\t\tdescription\n\t\tbrand\n\t\tcategory\n\t\tprice\n\t\tcountInStock\n\t\tid\n\t}\n  }\n`;\nexport const EDIT_PRODUCT = gql`\n  mutation editProduct(\n\t  \t$id: ID!\n\t \t$name: String\n\t\t$image: Upload\n\t\t$description: String\n\t\t$brand: String\n\t\t$category: String\n\t\t$price: Float\n\t\t$countInStock: Int\n  ) {\n\teditProduct(\n\t\tid: $id\n\t \tname: $name\n\t\timage: $image\n\t\tdescription: $description\n\t\tbrand: $brand\n\t\tcategory: $category\n\t\tprice: $price\n\t\tcountInStock: $countInStock\n\t) {\n\t\tname\n\t\timage\n\t\tdescription\n\t\tbrand\n\t\tcategory\n\t\tprice\n\t\tcountInStock\n\t\tid\n\t}\n  }\n`;\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String! $password: String!) {\n    login(email: $email password: $password) {\n\t  email\n\t  token\n\t  isAdmin\n      username\n    }\n  }\n`;\n\nexport const REGISTER_USER = gql`\n  mutation register($username: String!\n\t$email: String! \n\t$password: String!\n\t$confirmPassword: String!) {\n    register(username: $username email: $email password: $password confirmPassword: $confirmPassword) {\n\t  email\n      password\n    }\n  }\n`;\n\nexport const UPDATE_USER_PROFILE = gql`\nmutation updateUserProfile($username: String $email: String $password: String) {\n\tupdateUserProfile(username: $username email: $email password: $password) {\n\t\tusername\n\t\temail\n\t\ttoken\n\t  }\n} \n`;\nexport const CREATE_ORDER = gql`\nmutation createOrder(\n\t$orderItems: [OrderProductInput]!\n\t$shippingAddress: ShippingAddress!\n\t$paymentMethod: String!\n\t$paymentResult: PaymentInput!\n\t$itemsPrice: Float!\n\t$shippingPrice: Float!\n\t$taxPrice: Float!\n\t$totalPrice: Float!) {\n\tcreateOrder(\n\t\torderItems: $orderItems \n\t\tshippingAddress: $shippingAddress \n\t\tpaymentMethod: $paymentMethod \n\t\tpaymentResult: $paymentResult\n\t\titemsPrice: $itemsPrice \n\t\tshippingPrice: $shippingPrice \n\t\ttaxPrice: $taxPrice \n\t\ttotalPrice: $totalPrice) {\n\t\t\tuser { username _id }\n\t\t\torderItems {\n\t\t\t\tproduct { name }\n\t\t\t\tqtyOrdered\n\t\t\t}\n\t\t\tshippingAddress {city address postalCode country}\n\t\t\tpaymentMethod\n\t\t\tpaymentResult { emailAddress paidAt paymentID }\n\t\t\ttaxPrice\n\t\t\tshippingPrice\n\t\t\ttotalPrice\n\t\t\tisDelivered\n\t\t\tdeliveredAt\n\t\t\tcreatedAt\n\t\t\t_id\n\t  \t}\n\t}\n`;\n\nexport const GET_PAYPAL_CLIENTID = gql`\n{\n\tgetPayPalClientID \n}\n`;\n\nexport const FETCH_USER_ORDERS_QUERY = gql`\n{\n\tgetUserOrders {\n\t\tuser { username, _id }\n\t\torderItems {\n\t\t\tproduct {name image id price}\n\t\t\tqtyOrdered\n\t\t}\n\t\tshippingAddress { address city postalCode country }\n\t\tpaymentMethod\n\t\ttaxPrice\n\t\tshippingPrice\n\t\ttotalPrice\n\t\tpaymentResult { paidAt }\n\t\tisDelivered\n\t\tdeliveredAt\n\t\t_id\n\t}\n  }\n`\n\nexport const FETCH_ORDER_QUERY = gql`\n\tquery($orderID: ID!) {\n\t\tgetUserOrder(orderID: $orderID) {\n\t\t\tuser { username, _id }\n\t\t\torderItems {\n\t\t\t\tproduct {name image id price}\n      \t\t\tqtyOrdered\n    \t\t}\n\t\t\tshippingAddress { address city postalCode country }\n\t\t\tpaymentMethod\n\t\t\ttaxPrice\n\t\t\tshippingPrice\n\t\t\ttotalPrice\n\t\t\tpaymentResult { paidAt }\n\t\t\tisDelivered\n\t\t\tdeliveredAt\n\t\t\t_id\n\t\t}\n\t}\n`\n\nexport const FETCH_ALL_ORDERS_QUERY = gql`\n\t{\n\t\tgetOrders {\n\t\t\tuser { username, _id }\n\t\t\torderItems {\n\t\t\t\tproduct {name image id price}\n      \t\t\tqtyOrdered\n    \t\t}\n\t\t\tshippingAddress { address city postalCode country }\n\t\t\tpaymentMethod\n\t\t\ttaxPrice\n\t\t\tshippingPrice\n\t\t\ttotalPrice\n\t\t\tpaymentResult { paidAt }\n\t\t\tisDelivered\n\t\t\tdeliveredAt\n\t\t\t_id\n\t\t}\n\t}\n`\n\nexport const FETCH_USER_LIST = gql`\n\t{\n\t\tgetUsers {\n\t\t\tusername\n\t\t\temail\n\t\t\tpassword\n\t\t\tisAdmin\n\t\t\t_id\n\t\t}\n\t}\n`\nexport const DELETE_USER = gql`\n\tmutation deleteUser($id: ID!){\n\t\tdeleteUser(id: $id) \n\t}\n`\n\nexport const EDIT_ADMIN_STATUS = gql`\n\tmutation editAdminStatus($id: ID!){\n\t\teditAdminStatus(id: $id) \n\t}\n`\n\nexport const EDIT_DELIVERY_STATUS = gql`\n\tmutation markOrderAsDelivered($orderID: ID!){\n\t\tmarkOrderAsDelivered(orderID: $orderID) \n\t}\n`\nexport const CREATE_REVIEW = gql`\n\tmutation createReview($productID: ID! $rating: Int! $comment: String!){\n\t\tcreateReview(productID: $productID rating: $rating comment: $comment) \n\t}\n`\n\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst ErrorMessage = ({ variant, error }) => {\n\treturn (\n\t\t<Alert variant={variant}>\n\t\t\t{JSON.stringify(error.message).split(\"\\\"\").map(message => (\n\t\t\t\tmessage.charAt(message.length - 1) === '\\\\' ? message.slice(0, -1) : message\n\t\t\t))}\n\t\t</Alert>\n\t)\n}\n\nErrorMessage.defaultProps = {\n\tvariant: 'info',\n}\n\nexport default ErrorMessage","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Rating = ({ value, numReviews, color }) => {\n\tlet stars = new Array(5).fill(0) //mapping over 5 stars and if the idx of each star is greater than the amount, it should be full, then half or no star\n\tlet star = (count) => (\n\t\t<span key={Math.random()}>\n\t\t\t<i style={{ color: color }}\n\t\t\t\tclassName={\n\t\t\t\t\tvalue >= count\n\t\t\t\t\t\t? 'fas fa-star'\n\t\t\t\t\t\t: value >= count - .5\n\t\t\t\t\t\t\t? 'fas fa-star-half-alt'\n\t\t\t\t\t\t\t: 'far fa-star'\n\t\t\t\t}>\n\t\t\t</i>\n\t\t</span>\n\t)\n\treturn (\n\t\t<div className=\"rating\">\n\t\t\t{stars.map((_, i) => star(i + 1))}\n\t\t\t<span>{numReviews && numReviews}</span>\n\t\t</div>\n\t)\n}\n\nRating.defaultProps = {\n\tcolor: '#FFD700'\n}\n\nRating.propTypes = {\n\tvalue: PropTypes.number.isRequired,\n\tcolor: PropTypes.string\n}\n\nexport default Rating\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Card } from 'react-bootstrap'\nimport Rating from './Rating'\nimport Skeleton from 'react-loading-skeleton';\n\nconst Product = ({ product }) => {\n\treturn (\n\t\t<Card className='my-3 p-3 rounded'>\n\t\t\t<Link to={`/product/${product?.id}`}>\n\t\t\t\t{product?.image ?\n\t\t\t\t\t<Card.Img src={product?.image} variant='top'>\n\t\t\t\t\t</Card.Img> :\n\t\t\t\t\t<Skeleton width={205} duration={2} height={205} />\n\t\t\t\t}\n\t\t\t</Link>\n\t\t\t<Card.Body>\n\t\t\t\t<Link to={`/product/${product?.id}`}>\n\t\t\t\t\t<Card.Title as='div'> <strong>{product?.name || <Skeleton count={2} />}</strong></Card.Title>\n\t\t\t\t</Link>\n\t\t\t\t{\n\t\t\t\t\tproduct?.rating &&\n\t\t\t\t\t<Card.Text as='div'>\n\t\t\t\t\t\t<Rating\n\t\t\t\t\t\t\tvalue={product?.rating}\n\t\t\t\t\t\t\tnumReviews={`${product?.numReviews} reviews`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Card.Text>\n\t\t\t\t}\n\t\t\t\t<Card.Text as='h3'> {product?.price ? `$${product?.price}` : <Skeleton count={1} />}</Card.Text>\n\t\t\t</Card.Body>\n\t\t</Card >\n\t)\n}\n\nexport default Product\n","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst SearchBox = ({ setQuery }) => {\n\tconst submitHandler = (e) => {\n\t\te.preventDefault()\n\t}\n\n\treturn (\n\t\t<Form onSubmit={submitHandler} inline>\n\t\t\t<Form.Control\n\t\t\t\tas='input'\n\t\t\t\ttype='text'\n\t\t\t\tonChange={(e) => setQuery(e.target.value)}\n\t\t\t\tplaceholder='Search Products...'\n\t\t\t\tclassName='mr-sm-2 ml-sm-5 outline'\n\t\t\t\tstyle={{ outline: 'red', borderWidth: '2px' }}\n\t\t\t></Form.Control>\n\t\t\t<Button type='submit' variant='outline-success' className='p-2'>\n\t\t\t\tSearch\n      </Button>\n\t\t</Form>\n\t)\n}\n\nexport default SearchBox","\nimport React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Carousel, Image } from 'react-bootstrap'\nimport { useQuery } from '@apollo/client'\n\nimport { GET_TOP_PRODUCTS } from '../util/queries'\n\n\nconst ProductCarousel = () => {\n\n\tconst { data, loading } = useQuery(GET_TOP_PRODUCTS)\n\n\treturn (\n\t\tloading ? <h1>Loading..</h1> :\n\t\t\t<Carousel pause='hover' className='bg-dark' style={{ marginBottom: '50px' }} >\n\t\t\t\t{data?.getTopProducts.map((product) => (\n\t\t\t\t\t<Carousel.Item key={product.id}>\n\t\t\t\t\t\t<Link to={`/product/${product.id}`}>\n\t\t\t\t\t\t\t<Image src={product.image} alt={product.name} className='justify-content-md-center' fluid />\n\t\t\t\t\t\t\t<Carousel.Caption className='carousel-caption'>\n\t\t\t\t\t\t\t\t<h2> {product.name} (${product.price})</h2>\n\t\t\t\t\t\t\t</Carousel.Caption>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</Carousel.Item>\n\t\t\t\t))}\n\t\t\t</Carousel>\n\t)\n}\n\nexport default ProductCarousel","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nconst Meta = ({ title, description, keywords }) => {\n\treturn (\n\t\t<Helmet>\n\t\t\t<title>{title}</title>\n\t\t\t<meta name='description' content={description} />\n\t\t\t<meta name='keyword' content={keywords} />\n\t\t</Helmet>\n\t)\n}\n\nMeta.defaultProps = {\n\ttitle: 'Welcome To ProShop',\n\tdescription: 'We sell the best products for cheap',\n\tkeywords: 'electronics, buy electronics, cheap electroincs',\n}\n\nexport default Meta","import React, { useState, useEffect } from 'react'\nimport { Row, Col, Button } from 'react-bootstrap'\nimport { useQuery, useLazyQuery } from '@apollo/client';\nimport { FETCH_PRODUCTS_QUERY } from '../util/queries.js'\nimport { Helmet } from 'react-helmet';\nimport Fuse from \"fuse.js\";\nimport { Waypoint } from 'react-waypoint';\n\nimport ErrorMessage from '../components/ErrorMessage';\nimport Product from '../components/Product'\nimport SearchBox from '../components/SearchBox';\nimport ProductCarousel from '../components/ProductCarousel.js';\nimport Meta from '../components/Meta.js';\n\nconst HomeScreen = () => {\n\tconst { data, loading, error, fetchMore } = useQuery(FETCH_PRODUCTS_QUERY)\n\tconst loadingData = new Array(12).fill(null)\n\n\t//Search functionality\n\tconst [query, setQuery] = useState('')\n\tlet products = data?.getProducts\n\tif (!loading) {\n\t\tconst fuseOptions = {\n\t\t\tshouldSort: true, //sorts by closest match\n\t\t\tthreshold: 0.4,\n\t\t\tdistance: 50,\n\t\t\tkeys: ['name', 'description', 'brand']\n\t\t}\n\t\tconst fuse = new Fuse(products, fuseOptions)\n\t\tif (query.length > 0) {\n\t\t\tproducts = fuse.search(query)\n\t\t\tproducts = products.map(({ item }) => item)\n\t\t}\n\t}\n\n\n\tif (error) return <ErrorMessage variant='danger' error={error} />\n\telse return (\n\t\t<>\n\t\t\t<Meta />\n\t\t\t{loading ?\n\t\t\t\t(<Row>\n\t\t\t\t\t{loadingData.map((box, i) => (\n\t\t\t\t\t\t<Col key={i} sm={12} md={6} lg={4} xl={3}>\n\t\t\t\t\t\t\t<Product product={box} />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t))}\n\t\t\t\t</Row>\n\t\t\t\t) :\n\t\t\t\t(\n\t\t\t\t\t<>\n\t\t\t\t\t\t<ProductCarousel />\n\t\t\t\t\t\t<SearchBox setQuery={setQuery} />\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t{products.map((product, i) => (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<Col key={product.id} sm={12} md={6} lg={4} xl={3}>\n\t\t\t\t\t\t\t\t\t\t<Product product={product} />\n\t\t\t\t\t\t\t\t\t</Col>\n\n\t\t\t\t\t\t\t\t\t{i === data.getProducts.length - 10 && (\n\t\t\t\t\t\t\t\t\t\t<Waypoint onEnter={() => fetchMore({\n\t\t\t\t\t\t\t\t\t\t\tvariables: { _id: product.id },\n\t\t\t\t\t\t\t\t\t\t\tupdateQuery: (prev, { fetchMoreResult }) => {\n\t\t\t\t\t\t\t\t\t\t\t\tif (!fetchMoreResult) return\n\t\t\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetProducts: [...prev.getProducts, ...fetchMoreResult.getProducts]\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t})} />\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</>)\n\t\t\t}\n\t\t</>\n\t)\n}\n\nexport default HomeScreen\n","import React, { createContext } from 'react'\nimport { useImmerReducer } from 'use-immer'\n\nconst CartContext = createContext()\n\nconst cartReducer = (draft, action) => {\n\tswitch (action.type) {\n\t\tcase 'ADD_TO_CART':\n\t\t\tdraft.cartItems.hasOwnProperty(action.payload.name) ?\n\t\t\t\t//Updating product in cart\n\t\t\t\tdraft.cartItems[action.payload.name].qty = Number(action.payload.qty) + Number(draft.cartItems[action.payload.name].qty) :\n\t\t\t\t//Adding new product to cart\n\t\t\t\tdraft.cartItems[action.payload.name] = action.payload\n\t\t\tlocalStorage.setItem('cartItems', JSON.stringify({ ...draft.cartItems }))\n\t\t\treturn\n\t\tcase 'UPDATE_CART':\n\t\t\taction.payload.qty ?\n\t\t\t\t//Updating the qty of a product\n\t\t\t\tdraft.cartItems[action.payload.name] = action.payload :\n\t\t\t\t//Deleting a product\n\t\t\t\tdraft.cartItems = Object.keys(draft.cartItems).reduce((newObj, key) => {\n\t\t\t\t\tif (key !== action.payload.name) newObj[key] = draft.cartItems[key]\n\t\t\t\t\treturn newObj\n\t\t\t\t}, {})\n\t\t\tlocalStorage.setItem('cartItems', JSON.stringify({ ...draft.cartItems }))\n\t\t\treturn\n\t\tcase 'DELETE_CART':\n\t\t\tdraft.cartItems = {}\n\t\t\tdraft.shippingAddress = {}\n\t\t\tdraft.paymentInfo = {}\n\t\t\tlocalStorage.removeItem('cartItems', {})\n\t\t\tlocalStorage.removeItem('shippingAddress', {})\n\t\t\treturn\n\t\tcase 'SAVE_ADDRESS':\n\t\t\tdraft.shippingAddress = action.payload\n\t\t\tlocalStorage.setItem('shippingAddress', JSON.stringify(draft.shippingAddress))\n\t\t\treturn\n\t\tcase 'SAVE_PAYMENT_METHOD':\n\t\t\tdraft.paymentInfo.payment = action.payload\n\t\t\treturn\n\t\tdefault:\n\t\t\treturn draft\n\t}\n}\nconst cartItems = localStorage.getItem('cartItems') ?\n\tJSON.parse(localStorage.getItem('cartItems')) :\n\t{}\nconst shippingAddress = localStorage.getItem('shippingAddress') ?\n\tJSON.parse(localStorage.getItem('shippingAddress')) :\n\t{}\nconst paymentInfo = localStorage.getItem('paymentInfo') ?\n\tJSON.parse(localStorage.getItem('paymentInfo')) :\n\t{}\nconst initialCartState = { cartItems, shippingAddress, paymentInfo }\n\nconst CartContextProvider = (props) => {\n\tconst [cartState, cartDispatch] = useImmerReducer(cartReducer, initialCartState)\n\n\tconst addToCart = (item) => {\n\t\tcartDispatch({\n\t\t\ttype: 'ADD_TO_CART',\n\t\t\tpayload: item\n\t\t})\n\t}\n\n\tconst updateCart = (item) => {\n\t\tcartDispatch({\n\t\t\ttype: 'UPDATE_CART',\n\t\t\tpayload: item\n\t\t})\n\t}\n\n\tconst deleteCart = () => {\n\t\tcartDispatch({\n\t\t\ttype: 'DELETE_CART',\n\t\t})\n\t}\n\n\tconst saveAddress = (address) => {\n\t\tcartDispatch({\n\t\t\ttype: 'SAVE_ADDRESS',\n\t\t\tpayload: address\n\t\t})\n\t}\n\n\tconst savePaymentMethod = (payment) => {\n\t\tcartDispatch({\n\t\t\ttype: 'SAVE_PAYMENT_METHOD',\n\t\t\tpayload: payment\n\t\t})\n\t}\n\n\treturn <CartContext.Provider value={{\n\t\tcartItems: cartState.cartItems,\n\t\tshippingAddress: cartState.shippingAddress,\n\t\tpaymentInfo: cartState.paymentInfo,\n\t\taddToCart, updateCart, deleteCart, saveAddress, savePaymentMethod\n\t}} {...props} />\n}\n\nexport { CartContext, CartContextProvider }","import React, { useState } from 'react'\nimport { Alert, Button, Col, Form, ListGroup, Row } from 'react-bootstrap'\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min'\nimport Rating from './Rating'\nimport { useMutation } from '@apollo/client';\n\nimport { FETCH_PRODUCT_QUERY, CREATE_REVIEW } from '../util/queries.js'\nimport ErrorMessage from './ErrorMessage';\n\nconst Review = ({ reviews, user, productID, numReviews }) => {\n\tconst [rating, setRating] = useState(false)\n\tconst [comment, setComment] = useState('')\n\tconst [reviewSubmitted, setReviewSubmitted] = useState(false)\n\n\tconst [submitReview] = useMutation(CREATE_REVIEW, {\n\t\trefetchQueries: [{ query: FETCH_PRODUCT_QUERY, variables: { productID } }],\n\t\tonCompleted(success) {\n\t\t\tif (success) setReviewSubmitted(<Alert variant='success'>\n\t\t\t\tReview submitted successfully\n\t\t  </Alert>)\n\t\t},\n\t\tonError(err) {\n\t\t\tsetReviewSubmitted(<ErrorMessage variant='danger' error={err} />)\n\t\t}\n\t})\n\n\tconst reviewSubmitHandler = (e) => {\n\t\te.preventDefault()\n\t\tsubmitReview({ variables: { comment, rating: Number(rating), productID } })\n\t\tsetRating(false)\n\t\tsetComment('')\n\t}\n\n\treturn (\n\t\t<Row>\n\t\t\t<Col md={6}>\n\t\t\t\t<h2>Reviews</h2>\n\t\t\t\t{reviews.length === 0 && <Alert variant='info'>No Reviews</Alert>}\n\t\t\t\t<ListGroup variant='flush'>\n\t\t\t\t\t{reviews && reviews.map(review => (\n\t\t\t\t\t\t<ListGroup.Item key={review._id}>\n\t\t\t\t\t\t\t<strong>{review.username}</strong>\n\t\t\t\t\t\t\t<Rating value={review.rating} ></Rating>\n\t\t\t\t\t\t\t<p>{new Date(review.createdAt).toDateString()}</p>\n\t\t\t\t\t\t\t<p>{review.comment}</p>\n\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t))}\n\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t<h2>Write a Customer Review</h2>\n\t\t\t\t\t\t{reviewSubmitted}\n\t\t\t\t\t\t{user ? (\n\t\t\t\t\t\t\t<Form onSubmit={reviewSubmitHandler}>\n\t\t\t\t\t\t\t\t<Form.Group controlId='rating'>\n\t\t\t\t\t\t\t\t\t<Form.Label>Rating</Form.Label>\n\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\tas='select'\n\t\t\t\t\t\t\t\t\t\tvalue={rating}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRating(e.target.value)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<option value=''>Select...</option>\n\t\t\t\t\t\t\t\t\t\t<option value='1'>1 - Poor</option>\n\t\t\t\t\t\t\t\t\t\t<option value='2'>2 - Fair</option>\n\t\t\t\t\t\t\t\t\t\t<option value='3'>3 - Good</option>\n\t\t\t\t\t\t\t\t\t\t<option value='4'>4 - Very Good</option>\n\t\t\t\t\t\t\t\t\t\t<option value='5'>5 - Excellent</option>\n\t\t\t\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t<Form.Group controlId='comment'>\n\t\t\t\t\t\t\t\t\t<Form.Label>Comment</Form.Label>\n\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\tas='textarea'\n\t\t\t\t\t\t\t\t\t\trow='3'\n\t\t\t\t\t\t\t\t\t\tvalue={comment}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setComment(e.target.value)}\n\t\t\t\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t// disabled={loadingProductReview}\n\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\tvariant='primary'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSubmit\n                      </Button>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Alert>\n\t\t\t\t\t\t\t\t\tPlease <Link to='/login'>sign in</Link> to write a review{' '}\n\t\t\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t</ListGroup>\n\t\t\t</Col>\n\t\t</Row>\n\t)\n}\n\nexport default Review\n","import React, { useState, useContext } from 'react'\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Image, ListGroup, Card, Button, Form, Alert } from 'react-bootstrap';\nimport { useQuery } from '@apollo/client';\nimport Skeleton from 'react-loading-skeleton';\n\nimport { FETCH_PRODUCT_QUERY } from '../util/queries.js'\nimport Rating from '../components/Rating'\nimport ErrorMessage from '../components/ErrorMessage';\nimport { CartContext } from '../context/CartContext'\nimport { AuthContext } from '../context/AuthContext'\nimport Review from '../components/Review.js';\nimport Meta from '../components/Meta.js';\n\nconst ProductPage = ({ history, match }) => {\n\tconst productID = match.params.id\n\tconst { data, loading, queryError } = useQuery(FETCH_PRODUCT_QUERY, {\n\t\tvariables: {\n\t\t\tproductID\n\t\t}\n\t})\n\tconst { name, image, rating, price, description, numReviews, countInStock, reviews } = data?.getProduct || {\n\t\tname: \"\", image: \"\", rating: \"\", price: \"\", description: \"\", numReviews: \"\", countInStock: \"\", reviews: {}\n\t} //if loading, data will be an empty obj, full of empty properties so that there isn't an undefined error and I don't have to put product?.<field> everywhere.\n\n\tconst [qty, setQty] = useState(1)\n\tconst [error, setError] = useState(null)\n\n\tconst { addToCart, cartItems } = useContext(CartContext)\n\tconst { user } = useContext(AuthContext)\n\n\tif (queryError) setError(<ErrorMessage variant=\"danger\" error={ErrorMessage}></ErrorMessage>)\n\telse {\n\t\tconst quantityExceedStock = () => {\n\t\t\tif (cartItems && Object.keys(cartItems).length && countInStock - ~~cartItems[name]?.qty === 0) return true\n\t\t\telse return false\n\t\t}\n\t\tconst addToCartHandler = (e) => {\n\t\t\tif (!user) setError(\n\t\t\t\t<Alert variant='danger' style={{ textAlign: 'center' }\n\t\t\t\t} error={{ message: \"\" }\n\t\t\t\t} >\n\t\t\t\t\t<Link to='/login'> Log In </Link> or < Link to='/register' > Register  </Link >\n\t\t\t\t\t<br />\n\t\t\t\t\t\tTo Add Items To Cart\n\t\t\t\t</Alert >\n\t\t\t)\n\t\t\telse {\n\t\t\t\thistory.push(`/cart/${productID}?qty=${qty}`) //redirects to product id with a query string for quantity\n\t\t\t\tsetQty(e.target.value)\n\t\t\t\taddToCart({ ...data?.getProduct, qty })\n\t\t\t}\n\t\t}\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Meta title={name} description={description} />\n\t\t\t\t<Link to='/' className=\"btn btn-dark my-3\">Go Back</Link>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col col={6} >\n\t\t\t\t\t\t{name ?\n\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\tonError={i => i.target.style.display = 'none'}\n\t\t\t\t\t\t\t\tsrc={image}\n\t\t\t\t\t\t\t\talt={name}\n\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<Skeleton width={300} height={250} />\n\t\t\t\t\t\t}\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col col={6}>\n\t\t\t\t\t\t<ListGroup variant='flush'>\n\t\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t\t<h3>{name || <Skeleton count={1} height={60} />}</h3>\n\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\trating &&\n\t\t\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t\t\t<Rating\n\t\t\t\t\t\t\t\t\t\tvalue={rating}\n\t\t\t\t\t\t\t\t\t\tnumReviews={`${numReviews} Reviews`}>\n\t\t\t\t\t\t\t\t\t</Rating>\n\t\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t<ListGroup.Item>{price ? `Price: $${price}` : <Skeleton count={1} />}</ListGroup.Item>\n\t\t\t\t\t\t\t<ListGroup.Item>{description ? `${description}` : <Skeleton count={1} />}</ListGroup.Item>\n\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col md={3}>\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<ListGroup variant='flush'>\n\t\t\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t\tPrice:\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t\t<strong>${price}</strong>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t\tStatus:\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t\t{countInStock > 0 ?\n\t\t\t\t\t\t\t\t\t\t\t\tquantityExceedStock() ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t'Full Quantity in Cart' :\n\t\t\t\t\t\t\t\t\t\t\t\t\t'In Stock' :\n\t\t\t\t\t\t\t\t\t\t\t\t'Out of Stock'}\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t(countInStock > 0 && !quantityExceedStock()) && (\n\t\t\t\t\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t\t\t<Col>QTY</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tas='select'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={qty}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setQty(e.target.value)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{Array(countInStock - ~~cartItems[name]?.qty).fill(null).map(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(x, i) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option key={i + 1} value={i + 1}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{i + 1}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn-block\"\n\t\t\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\t\t\tdisabled={countInStock === 0 || quantityExceedStock()}\n\t\t\t\t\t\t\t\t\t\tonClick={(e) => addToCartHandler(e, name)}\n\t\t\t\t\t\t\t\t\t> Add to Cart\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t\t\t{error}\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t{!loading &&\n\t\t\t\t\t<Review reviews={reviews} user={user} productID={productID} numReviews={`${numReviews} Reviews`} />}\n\t\t\t</>\n\t\t)\n\t}\n}\n\nexport default ProductPage\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst FormContainer = ({ children }) => {\n\treturn (\n\t\t<Container>\n\t\t\t<Row className='justify-content-md-center'>\n\t\t\t\t<Col xs={12} md={6}>\n\t\t\t\t\t{children}\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t)\n}\n\nexport default FormContainer","import React, { useState, useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useMutation } from '@apollo/client';\n\nimport ErrorMessage from '../components/ErrorMessage'\nimport FormContainer from '../components/FormContainer'\nimport { AuthContext } from '../context/AuthContext'\nimport { LOGIN_USER } from '../util/queries';\nimport Meta from '../components/Meta';\n\nconst LoginScreen = ({ location, history }) => {\n\tconst [email, setEmail] = useState('')\n\tconst [errors, setErrors] = useState({})\n\tconst [password, setPassword] = useState('')\n\n\tconst { login } = useContext(AuthContext)\n\tconst [loginUser, { loading }] = useMutation(LOGIN_USER, {\n\t\tupdate(_, result) {\n\t\t\tconsole.log(\"Logged in data: \", result.data.login)\n\t\t\tlogin(result.data.login) //This sends the logged in user data (after successful login) to AuthContext where the token is added to the authorization header\n\t\t\thistory.push('/')\n\t\t},\n\t\tonError(err) {\n\t\t\tsetErrors(err)\n\t\t\tconsole.log(err);\n\t\t}\n\t})\n\n\tconst loginHandler = (e) => {\n\t\te.preventDefault()\n\t\tloginUser({ variables: { email, password } })\n\t}\n\n\treturn (\n\t\t<FormContainer>\n\t\t\t<Meta title='Login' />\n\t\t\t<h1>Sign In</h1>\n\t\t\t{Object.keys(errors).length > 0 && <ErrorMessage error={errors} variant='danger'></ErrorMessage>}\n\t\t\t<Form onSubmit={loginHandler}>\n\t\t\t\t<Form.Group controlId='email'>\n\t\t\t\t\t<Form.Label>Email Address</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\tplaceholder='Enter email'\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group controlId='password'>\n\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tplaceholder='Enter password'\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Button type='submit' variant='primary'>\n\t\t\t\t\t{loading ? 'Logging In ' : 'Sign In'}\n\t\t\t\t</Button>\n\t\t\t</Form>\n\n\t\t\t<Row className='py-3'>\n\t\t\t\t<Col>\n\t\t\t\t\tNew Customer?{' '}\n\t\t\t\t\t<Link to={'/register'}>\n\t\t\t\t\t\tRegister\n          </Link>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</FormContainer>\n\t)\n}\n\nexport default LoginScreen","import React, { useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';\n\nimport ErrorMessage from '../components/ErrorMessage'\nimport { CartContext } from '../context/CartContext'\nimport Meta from '../components/Meta';\n\nconst CartPage = ({ match, location, history }) => {\n\tconst { cartItems, updateCart } = useContext(CartContext)\n\t//const qty = Number(location.search.split('=')[1]) //after the ? in the search params (?qty=1) and then splits it and grabs what is after the =\n\n\tconst checkoutHandler = (name) => {\n\t\thistory.push('/shipping') // If not logged in, go to login, if they are, go to shipping\n\t}\n\n\treturn (\n\t\t<Row>\n\t\t\t<Meta title='Cart' />\n\t\t\t<Col md={8}>\n\t\t\t\t<h1>Shopping Cart</h1>\n\t\t\t\t{Object.keys(cartItems).length === 0 ?\n\t\t\t\t\t<ErrorMessage error={{ message: `Your cart is empty` }}>\n\t\t\t\t\t\t<Link to='/'>Go Back</Link>\n\t\t\t\t\t</ErrorMessage> : (\n\t\t\t\t\t\t<ListGroup variant='flush'>\n\t\t\t\t\t\t\t{Object.values(cartItems).map(item => (\n\t\t\t\t\t\t\t\t<ListGroup.Item key={item.name}>\n\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t<Col md={2}>\n\t\t\t\t\t\t\t\t\t\t\t<Image src={item.image} alt={item.name} fluid rounded />\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t<Col md={6}>\n\t\t\t\t\t\t\t\t\t\t\t<Link to={`/product/${item.id}`}>{item.name}</Link>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t<Col md={2}>${ }{item.price}</Col>\n\t\t\t\t\t\t\t\t\t\t<Col md={2}>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\tas='select'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={item.qty}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => updateCart({ ...item, qty: Number(e.target.value) })}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{Array(item.countInStock).fill(null).map(\n\t\t\t\t\t\t\t\t\t\t\t\t\t(x, i) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option key={i + 1} value={i + 1}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{i + 1}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t\t\t\t\t\t\t<Col md={2}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant='light'\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => updateCart({ ...item, qty: 0 })}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fas fa-trash' />\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t)\n\n\t\t\t\t}\n\t\t\t</Col >\n\t\t\t<Col md={4}>\n\t\t\t\t<Card>\n\t\t\t\t\t<ListGroup variant='flush'>\n\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t<h2>Subtotal: ({cartItems ? Object.values(cartItems).reduce((acc, itm) => acc + Number(itm.qty), 0) : 0})</h2>\n\t\t\t\t\t\t\t${cartItems ? Object.values(cartItems).reduce((acc, itm) => acc + itm.price * itm.qty, 0).toFixed(2) : 0}\n\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\tclassName='btn-block'\n\t\t\t\t\t\t\t\tdisabled={Object.values(cartItems).length === 0}\n\t\t\t\t\t\t\t\tonClick={checkoutHandler}\n\t\t\t\t\t\t\t>Proceed to Checkout\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t</ListGroup>\n\t\t\t\t</Card>\n\t\t\t</Col>\n\t\t\t<Col md={8}>\n\n\t\t\t</Col>\n\t\t</Row>\n\t)\n}\n\nexport default CartPage\n","import React, { useState, useContext } from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\n\nimport ErrorMessage from '../components/ErrorMessage'\nimport FormContainer from '../components/FormContainer'\nimport { REGISTER_USER, LOGIN_USER } from '../util/queries';\nimport { AuthContext } from '../context/AuthContext'\nimport { useMutation } from '@apollo/client'\nimport Meta from '../components/Meta'\n\nconst RegisterScreen = ({ location, history }) => {\n\n\tconst [errors, setErrors] = useState('')\n\tconst [username, setUsername] = useState('')\n\tconst [email, setEmail] = useState('')\n\tconst [password, setPassword] = useState('')\n\tconst [confirmPassword, setConfirmPassword] = useState('')\n\n\tconst { login, user } = useContext(AuthContext)\n\tconst [loginUser] = useMutation(LOGIN_USER, {\n\t\tupdate(_, result) {\n\t\t\tconsole.log(\"logged in: \", result.data.login)\n\t\t\tlogin(result.data.login) //This sends the logged in user data (after successful login) to AuthContext where the token is added to the authorization header\n\t\t\thistory.push('/')\n\t\t},\n\t\tonError(err) {\n\t\t\tsetErrors(err)\n\t\t\tconsole.log(err);\n\t\t}\n\t})\n\n\tconst [registerUser] = useMutation(REGISTER_USER, {\n\t\tupdate(_, result) {\n\t\t\tloginUser({ variables: { email, password } })\n\t\t}, onError(err) {\n\t\t\tsetErrors(err)\n\t\t\tconsole.log(err)\n\t\t},\n\t})\n\n\tconst registerHandler = (e) => {\n\t\te.preventDefault()\n\t\tregisterUser({ variables: { username, email, password, confirmPassword } })\n\t}\n\n\treturn (\n\t\tuser ?\n\t\t\t<Redirect to=\"/\"></Redirect> :\n\t\t\t<FormContainer>\n\t\t\t\t<Meta title='Register' />\n\t\t\t\t<h1>Sign Up</h1>\n\t\t\t\t{Object.keys(errors).length > 0 && <ErrorMessage error={errors} variant='danger'></ErrorMessage>}\n\t\t\t\t<Form onSubmit={registerHandler}>\n\t\t\t\t\t<Form.Group controlId='name'>\n\t\t\t\t\t\t<Form.Label>Name</Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\ttype='name'\n\t\t\t\t\t\t\tplaceholder='Enter name'\n\t\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\t\tonChange={(e) => setUsername(e.target.value)}\n\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Form.Group controlId='email'>\n\t\t\t\t\t\t<Form.Label>Email Address</Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\tplaceholder='Enter email'\n\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t<Form.Group controlId='password'>\n\t\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tplaceholder='Enter password'\n\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t<Form.Group controlId='confirmPassword'>\n\t\t\t\t\t\t<Form.Label>Confirm Password</Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tplaceholder='Confirm password'\n\t\t\t\t\t\t\tvalue={confirmPassword}\n\t\t\t\t\t\t\tonChange={(e) => setConfirmPassword(e.target.value)}\n\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t<Button type='submit' variant='primary'>\n\t\t\t\t\t\tRegister\n\t</Button>\n\t\t\t\t</Form>\n\n\t\t\t\t<Row className='py-3'>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\tHave an Account?{' '}\n\t\t\t\t\t\t<Link to={'/login'}>\n\t\t\t\t\t\t\tLogin\n\t  </Link>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</FormContainer>\n\t)\n}\n\nexport default RegisterScreen","import React, { useState, useContext } from 'react'\nimport { Table, Form, Button, Row, Col, Alert } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useMutation, useQuery } from '@apollo/client';\n\nimport { AuthContext } from '../context/AuthContext';\nimport ErrorMessage from '../components/ErrorMessage'\nimport { UPDATE_USER_PROFILE } from '../util/queries';\nimport { FETCH_USER_ORDERS_QUERY } from '../util/queries';\nimport Meta from '../components/Meta';\n\nconst ProfilePage = ({ location, history }) => {\n\tconst [newUsername, setNewUsername] = useState('')\n\tconst [newEmail, setNewEmail] = useState('')\n\tconst [password, setPassword] = useState('')\n\tconst [confirmPassword, setConfirmPassword] = useState('')\n\tconst [error, setError] = useState(null)\n\tconst [success, setSuccess] = useState(null)\n\n\tconst { login, user: { username, email } } = useContext(AuthContext)\n\n\tconst { data, loading } = useQuery(FETCH_USER_ORDERS_QUERY)\n\n\tconst [updateProfile] = useMutation(UPDATE_USER_PROFILE, {\n\t\tupdate(_, result) {\n\t\t\tsetSuccess(<Alert variant='success'>Profile Updated</Alert>)\n\t\t\tconsole.log(\"result\", result.data.updateUserProfile)\n\t\t\tlogin(result.data.updateUserProfile)\n\t\t\tsetError(false)\n\t\t\tsetNewUsername('')\n\t\t\tsetNewEmail('')\n\t\t\tsetConfirmPassword('')\n\t\t\tsetPassword('')\n\t\t}, onError(err) {\n\t\t\tsetSuccess(null)\n\t\t\tsetError(<ErrorMessage variant='danger' error={err}></ErrorMessage>)\n\t\t}\n\t})\n\n\tconst submitHandler = (e) => {\n\t\te.preventDefault()\n\t\tif (password !== confirmPassword) {\n\t\t\tsetError(<Alert variant='danger'>Passwords do not match</Alert>)\n\t\t\tsetSuccess(null)\n\t\t} else {\n\t\t\tupdateProfile({ variables: { username: newUsername, email: newEmail, password: password } })\n\t\t}\n\t}\n\n\treturn (\n\t\t<Row>\n\t\t\t<Meta title='Profile' />\n\t\t\t<Col md={4}>\n\t\t\t\t<h2>Update Profile</h2>\n\t\t\t\t{error}\n\t\t\t\t{success}\n\t\t\t\t<Form onSubmit={submitHandler}>\n\t\t\t\t\t<Form.Group controlId='name'>\n\t\t\t\t\t\t<Form.Label>Username</Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\ttype='name'\n\t\t\t\t\t\t\tplaceholder={`current username: ${username}`}\n\t\t\t\t\t\t\tvalue={newUsername}\n\t\t\t\t\t\t\tonChange={(e) => setNewUsername(e.target.value)}\n\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t<Form.Group controlId='email'>\n\t\t\t\t\t\t<Form.Label>Email Address</Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\tplaceholder={`current email: ${email}`}\n\t\t\t\t\t\t\tvalue={newEmail}\n\t\t\t\t\t\t\tonChange={(e) => setNewEmail(e.target.value)}\n\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t<Form.Group controlId='password'>\n\t\t\t\t\t\t<Form.Label>New Password</Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tplaceholder='Enter new password'\n\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t<Form.Group controlId='confirmPassword'>\n\t\t\t\t\t\t<Form.Label>Confirm New Password</Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tplaceholder='Confirm new password'\n\t\t\t\t\t\t\tvalue={confirmPassword}\n\t\t\t\t\t\t\tonChange={(e) => setConfirmPassword(e.target.value)}\n\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t<Button type='submit' variant='primary'>\n\t\t\t\t\t\tUpdate\n            </Button>\n\t\t\t\t</Form>\n\t\t\t</Col>\n\t\t\t<Col md={8}>\n\t\t\t\t<h2 style={{ textAlign: \"center\" }}>My Orders</h2>\n\t\t\t\t{data?.getUserOrders.length > 0 && !loading ?\n\t\t\t\t\t<Table striped bordered hover responsive className='table-sm'>\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>ID</th>\n\t\t\t\t\t\t\t\t<th>TOTAL</th>\n\t\t\t\t\t\t\t\t<th>PAID</th>\n\t\t\t\t\t\t\t\t<th>DELIVERED</th>\n\t\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t{data.getUserOrders.map(({ user, orderItems, shippingAddress, paymentMethod, taxPrice, shippingPrice, totalPrice, paymentResult, isDelivered, deliveredAt, _id }) => (\n\t\t\t\t\t\t\t<tbody key={_id}>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>{_id}</td>\n\t\t\t\t\t\t\t\t\t<td>{totalPrice}</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t{new Date(paymentResult.paidAt).toDateString()}\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t{isDelivered ? (\n\t\t\t\t\t\t\t\t\t\t\tdeliveredAt.substring(0, 10)\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t<i className='fas fa-times' style={{ color: 'red' }}></i>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<LinkContainer to={`/order/${_id}`}>\n\t\t\t\t\t\t\t\t\t\t\t<Button className='btn-sm' variant='light'>\n\t\t\t\t\t\t\t\t\t\t\t\tDetails\n                      </Button>\n\t\t\t\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Table>\n\t\t\t\t\t:\n\t\t\t\t\t<h4 style={{ textAlign: 'center' }}>Purchased items will display here :)</h4>\n\t\t\t\t}\n\t\t\t</Col>\n\t\t</Row>\n\t)\n}\n\nexport default ProfilePage","import React, { useContext, useEffect } from 'react'\nimport { Redirect, Route } from 'react-router-dom';\n\nimport { AuthContext } from '../context/AuthContext'\n\nfunction AuthRoute({ component: Component, redirect, adminRoute = false, ...rest }) { //renaming component to Component and capturing the rest of the props passed in to AuthRoute under ...rest\n\n\tconst { user } = useContext(AuthContext)\n\n\treturn (\n\t\t<Route\n\t\t\t{...rest}\n\t\t\trender={props =>\n\t\t\t\tuser ? <Component {...props} /> :\n\t\t\t\t\t<Redirect to={redirect} />\n\t\t\t}\n\t\t/>\n\t)\n}\n\nexport default AuthRoute\n","import React, { useContext } from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { AuthContext } from '../context/AuthContext'\n\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n\tconst { user } = useContext(AuthContext)\n\treturn (\n\t\t<Nav className='justify-content-center mb-4'>\n\t\t\t<Nav.Item>\n\t\t\t\t{step1 ? (\n\t\t\t\t\t<LinkContainer to={user ? '/cart' : '/login'}>\n\t\t\t\t\t\t<Nav.Link>Sign In</Nav.Link>\n\t\t\t\t\t</LinkContainer>\n\t\t\t\t) : (\n\t\t\t\t\t\t<Nav.Link disabled>Sign In</Nav.Link>\n\t\t\t\t\t)}\n\t\t\t</Nav.Item>\n\n\t\t\t<Nav.Item>\n\t\t\t\t{step2 ? (\n\t\t\t\t\t<LinkContainer to='/shipping'>\n\t\t\t\t\t\t<Nav.Link>Shipping</Nav.Link>\n\t\t\t\t\t</LinkContainer>\n\t\t\t\t) : (\n\t\t\t\t\t\t<Nav.Link disabled>Shipping</Nav.Link>\n\t\t\t\t\t)}\n\t\t\t</Nav.Item>\n\n\t\t\t<Nav.Item>\n\t\t\t\t{step3 ? (\n\t\t\t\t\t<LinkContainer to='/payment'>\n\t\t\t\t\t\t<Nav.Link>Payment</Nav.Link>\n\t\t\t\t\t</LinkContainer>\n\t\t\t\t) : (\n\t\t\t\t\t\t<Nav.Link disabled>Payment</Nav.Link>\n\t\t\t\t\t)}\n\t\t\t</Nav.Item>\n\n\t\t\t<Nav.Item>\n\t\t\t\t{step4 ? (\n\t\t\t\t\t<LinkContainer to='/placeorder'>\n\t\t\t\t\t\t<Nav.Link>Place Order</Nav.Link>\n\t\t\t\t\t</LinkContainer>\n\t\t\t\t) : (\n\t\t\t\t\t\t<Nav.Link disabled>Place Order</Nav.Link>\n\t\t\t\t\t)}\n\t\t\t</Nav.Item>\n\t\t</Nav>\n\t)\n}\n\nexport default CheckoutSteps","import React, { useState, useContext } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport CheckoutSteps from '../components/CheckoutSteps'\n\nimport FormContainer from '../components/FormContainer'\nimport Meta from '../components/Meta'\n// import CheckoutSteps from '../components/CheckoutSteps'\nimport { CartContext } from '../context/CartContext'\n\n\nconst ShippingPage = ({ history }) => {\n\tconst { shippingAddress, saveAddress } = useContext(CartContext)\n\n\tconst [address, setAddress] = useState(shippingAddress?.address)\n\tconst [city, setCity] = useState(shippingAddress?.city)\n\tconst [postalCode, setPostalCode] = useState(shippingAddress?.postalCode)\n\tconst [country, setCountry] = useState(shippingAddress?.country)\n\n\tconst submitHandler = (e) => {\n\t\te.preventDefault()\n\t\tsaveAddress({ address, city, postalCode, country })\n\t\thistory.push('/payment')\n\t}\n\n\treturn (\n\t\t<FormContainer>\n\t\t\t<Meta title='Shipping' />\n\t\t\t<CheckoutSteps step1 step2 />\n\t\t\t<h1>Shipping</h1>\n\t\t\t<Form onSubmit={submitHandler}>\n\t\t\t\t<Form.Group controlId='address'>\n\t\t\t\t\t<Form.Label>Address</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder='Enter address'\n\t\t\t\t\t\tvalue={address || ''}\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tonChange={(e) => setAddress(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group controlId='city'>\n\t\t\t\t\t<Form.Label>City</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder='Enter city'\n\t\t\t\t\t\tvalue={city || ''}\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tonChange={(e) => setCity(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group controlId='postalCode'>\n\t\t\t\t\t<Form.Label>Postal Code</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder='Enter postal code'\n\t\t\t\t\t\tvalue={postalCode || ''}\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tonChange={(e) => setPostalCode(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group controlId='country'>\n\t\t\t\t\t<Form.Label>Country</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder='Enter country'\n\t\t\t\t\t\tvalue={country || ''}\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tonChange={(e) => setCountry(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Button type='submit' variant='primary'>\n\t\t\t\t\tContinue\n        </Button>\n\t\t\t</Form>\n\t\t</FormContainer>\n\t)\n}\n\nexport default ShippingPage","import React, { useContext, useState } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport FormContainer from '../components/FormContainer'\n\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { CartContext } from '../context/CartContext'\nimport Meta from '../components/Meta'\n\nconst PaymentScreen = ({ history }) => {\n\tconst { shippingAddress, savePaymentMethod } = useContext(CartContext)\n\n\tif (!shippingAddress) {\n\t\thistory.push('/shipping')\n\t}\n\n\tconst [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n\n\tconst submitHandler = (e) => {\n\t\te.preventDefault()\n\t\tsavePaymentMethod(paymentMethod)\n\t\thistory.push('/placeorder')\n\t}\n\n\treturn (\n\t\t<FormContainer>\n\t\t\t<Meta title='Payment' />\n\t\t\t<CheckoutSteps step1 step2 step3 />\n\t\t\t<h1>Payment Method</h1>\n\t\t\t<Form onSubmit={submitHandler}>\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Label as='legend'>Select Method</Form.Label>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Form.Check\n\t\t\t\t\t\t\ttype='radio'\n\t\t\t\t\t\t\tlabel='PayPal or Credit Card'\n\t\t\t\t\t\t\tid='PayPal'\n\t\t\t\t\t\t\tname='paymentMethod'\n\t\t\t\t\t\t\tvalue={paymentMethod}\n\t\t\t\t\t\t\tchecked\n\t\t\t\t\t\t\tonChange={setPaymentMethod}\n\t\t\t\t\t\t></Form.Check>\n\t\t\t\t\t\t{/* <Form.Check\n              type='radio'\n              label='Stripe'\n              id='Stripe'\n              name='paymentMethod'\n              value='Stripe'\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check> */}\n\t\t\t\t\t</Col>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Button type='submit' variant='primary'>\n\t\t\t\t\tContinue\n        </Button>\n\t\t\t</Form>\n\t\t</FormContainer>\n\t)\n}\n\nexport default PaymentScreen","import React, { useContext, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Row, Col, ListGroup, Image, Card, Alert } from 'react-bootstrap'\nimport { useMutation, useQuery } from '@apollo/client';\nimport { PayPalButton } from 'react-paypal-button-v2';\nimport Skeleton from 'react-loading-skeleton';\n\nimport { CartContext } from '../context/CartContext';\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { CREATE_ORDER, FETCH_USER_ORDERS_QUERY } from '../util/queries';\nimport { GET_PAYPAL_CLIENTID } from '../util/queries';\nimport ErrorMessage from '../components/ErrorMessage';\nimport Meta from '../components/Meta';\n\n//<script src=\"https://www.paypal.com/sdk/js?client-id=YOUR_CLIENT_ID\"></script>\nconst PlaceOrderPage = ({ history }) => {\n\tconst { shippingAddress, paymentInfo, cartItems } = useContext(CartContext)\n\n\tconst { data, paypalLoading } = useQuery(GET_PAYPAL_CLIENTID)\n\tconst [sdkReady, setSDKReady] = useState(false)\n\tconst [checkoutError, setCheckoutError] = useState(false)\n\tconst [error, setError] = useState(false)\n\n\t//Paypal Setup\n\tuseEffect(() => {\n\t\tif (data && !paypalLoading) {\n\t\t\tconst { getPayPalClientID: clientID } = data\n\t\t\tconsole.log(clientID);\n\t\t\tconst script = document.createElement('script')\n\t\t\tscript.type = 'text/javascript'\n\t\t\tscript.src = `https://www.paypal.com/sdk/js?client-id=${clientID}`\n\t\t\tscript.async = true\n\t\t\tscript.onload = () => setSDKReady(true)\n\t\t\tdocument.body.appendChild(script)\n\t\t}\n\t}, [data, paypalLoading])\n\n\tconst testProps = () => history.push({\n\t\tpathname: `/order/5fd273c36368f61f197c7a69`,\n\t\tstate: { justOrdered: true }\n\t})\n\n\n\tconst [createOrder, { loading }] = useMutation(CREATE_ORDER, {\n\t\trefetchQueries: [{ query: FETCH_USER_ORDERS_QUERY }],\n\t\tonCompleted(result) {\n\t\t\tconsole.log(result.createOrder)\n\t\t\thistory.push({\n\t\t\t\tpathname: `/order/${result.createOrder._id}`,\n\t\t\t\tstate: { justOrdered: true }\n\t\t\t})\n\t\t},\n\t\tonError(err) {\n\t\t\tconsole.log(err)\n\t\t\tsetError(\n\t\t\t\t<ErrorMessage varian='danger' error={err}></ErrorMessage>\n\t\t\t)\n\t\t}\n\t})\n\n\tif (Object.keys(shippingAddress).length === 0) {\n\t\thistory.push('/shipping')\n\t} else if (Object.keys(paymentInfo).length === 0) {\n\t\thistory.push('/payment')\n\t}\n\t//   Calculate prices\n\tconst addDecimals = (num) => {\n\t\treturn (Math.round(num * 100) / 100).toFixed(2)\n\t}\n\n\tconst orderInfo = {}\n\n\torderInfo.itemsPrice = addDecimals(\n\t\tObject.values(cartItems).reduce((acc, item) => acc + item.price * item.qty, 0)\n\t)\n\torderInfo.shippingPrice = addDecimals(orderInfo.itemsPrice > 100 ? 0 : 10)\n\torderInfo.taxPrice = addDecimals(Number((0.15 * orderInfo.itemsPrice).toFixed(2)))\n\torderInfo.totalPrice = (\n\t\tNumber(orderInfo.itemsPrice) +\n\t\tNumber(orderInfo.shippingPrice) +\n\t\tNumber(orderInfo.taxPrice)\n\t).toFixed(2)\n\n\tconst placeOrderHandler = (paymentResult) => {\n\t\tif (!paymentResult) setCheckoutError(\n\t\t\t<Alert variant='danger'>Error Completing purchase. Please try again or contact fake@email.com for support</Alert>\n\t\t)\n\t\telse {\n\t\t\tconst orderItems = Object.values(cartItems).map(x => ({ id: x[\"id\"], qty: Number(x.qty) }))\n\t\t\tcreateOrder({\n\t\t\t\tvariables: {\n\t\t\t\t\torderItems,\n\t\t\t\t\tshippingAddress,\n\t\t\t\t\tpaymentMethod: paymentInfo.payment,\n\t\t\t\t\titemsPrice: Number(orderInfo.itemsPrice),\n\t\t\t\t\tshippingPrice: Number(orderInfo.shippingPrice),\n\t\t\t\t\ttaxPrice: Number(orderInfo.taxPrice),\n\t\t\t\t\ttotalPrice: Number(orderInfo.totalPrice),\n\t\t\t\t\tpaymentResult: {\n\t\t\t\t\t\temailAddress: paymentResult.payer.email_address,\n\t\t\t\t\t\tpaidAt: paymentResult.update_time,\n\t\t\t\t\t\tpaymentID: paymentResult.id\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tif (loading) return <h1>Submitting Order...</h1>\n\treturn (\n\t\t<>\n\t\t\t<Meta title='Place Order' />\n\t\t\t{error ? error : false}\n\t\t\t<CheckoutSteps step1 step2 step3 step4 />\n\t\t\t<Row>\n\t\t\t\t<Col md={8}>\n\t\t\t\t\t<ListGroup variant='flush'>\n\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t<h2>Shipping</h2>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t<strong>Address: </strong>\n\t\t\t\t\t\t\t\t{shippingAddress.address}, {shippingAddress.city}{' '}\n\t\t\t\t\t\t\t\t{shippingAddress.postalCode},{' '}\n\t\t\t\t\t\t\t\t{shippingAddress.country}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</ListGroup.Item>\n\n\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t<h2>Payment Method</h2>\n\t\t\t\t\t\t\t<strong>Method: </strong>\n\t\t\t\t\t\t\t{paymentInfo.payment}\n\t\t\t\t\t\t</ListGroup.Item>\n\n\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t<h2>Order Items</h2>\n\t\t\t\t\t\t\t{Object.keys(cartItems).length === 0 ? (\n\t\t\t\t\t\t\t\t<Alert variant='danger'>Your cart is empty</Alert>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<ListGroup variant='flush'>\n\t\t\t\t\t\t\t\t\t\t{Object.values(cartItems).map((item, index) => (\n\t\t\t\t\t\t\t\t\t\t\t<ListGroup.Item key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col md={1}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={item.image}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={item.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trounded\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to={`/product/${item.id}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col md={4}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.qty} x ${item.price} = ${item.qty * item.price}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t</ListGroup>\n\t\t\t\t</Col>\n\t\t\t\t<Col md={4}>\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<ListGroup variant='flush'>\n\t\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t\t<h2>Order Summary</h2>\n\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<Col>Items</Col>\n\t\t\t\t\t\t\t\t\t<Col>${orderInfo.itemsPrice}</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<Col>Shipping</Col>\n\t\t\t\t\t\t\t\t\t<Col>${orderInfo.shippingPrice}</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<Col>Tax</Col>\n\t\t\t\t\t\t\t\t\t<Col>${orderInfo.taxPrice}</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<Col>Total</Col>\n\t\t\t\t\t\t\t\t\t<Col>${orderInfo.totalPrice}</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t\t{checkoutError}\n\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t\t{!sdkReady ? (<Skeleton count={1} height={60} />) : (\n\t\t\t\t\t\t\t\t\t<PayPalButton\n\t\t\t\t\t\t\t\t\t\tamount={orderInfo.totalPrice}\n\t\t\t\t\t\t\t\t\t\tonSuccess={placeOrderHandler}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t\t{/* <Button onClick={testProps}>Test checkout</Button> */}\n\t\t\t\t\t\t\t\t<Button style={{ display: 'flex', margin: '0 auto' }} >\n\t\t\t\t\t\t\t\t\t<Link to=\"/\" style={{ color: 'white' }}>Return to Shopping</Link>\n\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</>\n\t)\n}\n\nexport default PlaceOrderPage","import React, { useContext, useState, useEffect } from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport { Row, Col, ListGroup, Image, Card, Alert, Button } from 'react-bootstrap'\nimport { useQuery, useMutation } from '@apollo/client';\n\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { AuthContext } from '../context/AuthContext';\nimport { FETCH_ORDER_QUERY, EDIT_DELIVERY_STATUS } from '../util/queries';\nimport ErrorMessage from '../components/ErrorMessage';\nimport Skeleton from 'react-loading-skeleton';\nimport { CartContext } from '../context/CartContext';\nimport Meta from '../components/Meta';\n\n\nconst OrderPage = ({ match, history }) => {\n\tconst { user: loggedInUser } = useContext(AuthContext)\n\n\t// If the order was just processed, delete cartItems\n\tconst { deleteCart } = useContext(CartContext)\n\tconst [justOrdered, setJustOrdered] = useState(history.location?.state?.justOrdered)\n\tuseEffect(() => {\n\t\tif (justOrdered) {\n\t\t\tdeleteCart()\n\t\t\tsetJustOrdered(false)\n\t\t}\n\t}, [justOrdered, deleteCart])\n\n\tconst [error, setError] = useState(false)\n\tconst [editDeliveryStatus] = useMutation(EDIT_DELIVERY_STATUS, {\n\t\trefetchQueries: [{ query: FETCH_ORDER_QUERY, variables: { orderID: match.params.id } }],\n\t\tonError(err) {\n\t\t\tsetError(<ErrorMessage variant='danger' error={err}></ErrorMessage>)\n\t\t}\n\t})\n\tconst deliveryHandler = (orderID) => {\n\t\teditDeliveryStatus({ variables: { orderID: _id } })\n\t}\n\n\n\tconst { data, loading, queryError } = useQuery(FETCH_ORDER_QUERY, {\n\t\tvariables: { orderID: match.params.id }\n\t})\n\n\tif (queryError) return <ErrorMessage variant='danger' error={queryError}></ErrorMessage>\n\n\tconst { user, orderItems, shippingAddress, paymentMethod, taxPrice, shippingPrice, totalPrice, paymentResult, isDelivered, deliveredAt, _id } = data?.getUserOrder[0] || {\n\t\tuser: \"\", orderItems: \"\", shippingAddress: \"\", paymentMethod: \"\", taxPrice: \"\", shippingPrice: \"\", totalPrice: \"\", paymentResult: \"\", isDelivered: \"\", deliveredAt: \"\", _id: \"\"\n\t} //if loading, data will be an empty obj, full of empty properties\n\n\n\treturn (\n\t\t<>\n\t\t\t<Meta title='Order' />\n\t\t\t{/* Only logged in user or admins has access to their order */}\n\t\t\t{!loading && !loggedInUser.isAdmin && user._id !== loggedInUser.id ?\n\t\t\t\t<Redirect to='/' />\n\t\t\t\t: false\n\t\t\t}\n\t\t\t<CheckoutSteps step1 step2 step3 step4 />\n\t\t\t<Row>\n\t\t\t\t<Col md={8}>\n\t\t\t\t\t<h1>{loading ? <Skeleton count={1} height={40}></Skeleton> : `Order: ${_id}`}</h1>\n\t\t\t\t\t<ListGroup variant='flush'>\n\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t<h2>Shipping</h2>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t{loading ?\n\t\t\t\t\t\t\t\t<Skeleton count={2} height={20} /> :\n\t\t\t\t\t\t\t\t<div style={{ textIndent: '50px' }}>\n\t\t\t\t\t\t\t\t\t<p>{shippingAddress.address}</p>\n\t\t\t\t\t\t\t\t\t<p>{`${shippingAddress.city}, ${shippingAddress.postalCode}`}</p>\n\t\t\t\t\t\t\t\t\t<p>{shippingAddress.country}</p>\n\t\t\t\t\t\t\t\t</div >\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t{loading ?\n\t\t\t\t\t\t\t\t<Skeleton count={1} height={20} /> :\n\t\t\t\t\t\t\t\tisDelivered ?\n\t\t\t\t\t\t\t\t\t<Alert variant=\"success\">\n\t\t\t\t\t\t\t\t\t\t{`Product delivered at: ${deliveredAt}`}\n\t\t\t\t\t\t\t\t\t</Alert> :\n\t\t\t\t\t\t\t\t\t<Alert variant=\"info\">\n\t\t\t\t\t\t\t\t\t\tProduct Shipment: Pending\n\t\t\t\t\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t<h2>Payment Method</h2>\n\t\t\t\t\t\t{loading ?\n\t\t\t\t\t\t\t<Skeleton count={2} height={10} /> :\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t\t\t<Alert variant=\"success\" style={{ whiteSpace: 'pre-line' }}>\n\t\t\t\t\t\t\t\t\t\t{`${paymentMethod}: Payment Success! \n\t\t\t\t\t\t\t\t\t\tPaid on: ${new Date(paymentResult.paidAt).toDateString()}`}\n\t\t\t\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t<h2>Order Items</h2>\n\t\t\t\t\t\t\t{loading ?\n\t\t\t\t\t\t\t\t<Skeleton count={1} height={30} /> :\n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t<ListGroup variant='flush'>\n\t\t\t\t\t\t\t\t\t\t{Object.values(orderItems).map(({ product, qtyOrdered }, index) => (\n\t\t\t\t\t\t\t\t\t\t\t<ListGroup.Item key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col md={1}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={product.image}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={product.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trounded\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to={`/product/${product.id}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{product.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col md={4}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{qtyOrdered} x ${product.price} = ${qtyOrdered * product.price}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t</ListGroup>\n\t\t\t\t</Col>\n\t\t\t\t<Col md={4}>\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t{loading ?\n\t\t\t\t\t\t\t<Skeleton count={3} height={10} /> :\n\t\t\t\t\t\t\t<ListGroup variant='flush'>\n\t\t\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t\t\t<h2>Order Summary</h2>\n\t\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t<Col>Shipping</Col>\n\t\t\t\t\t\t\t\t\t\t<Col>${shippingPrice}</Col>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t<Col>Tax</Col>\n\t\t\t\t\t\t\t\t\t\t<Col>${taxPrice}</Col>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t<Col>Total</Col>\n\t\t\t\t\t\t\t\t\t\t<Col>${totalPrice}</Col>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t\t{loggedInUser.isAdmin && !isDelivered && (\n\t\t\t\t\t\t\t\t\t< ListGroup.Item >\n\t\t\t\t\t\t\t\t\t\t{ error}\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\t\t\t\tclassName='btn btn-block'\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => deliveryHandler(_id)}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tMark As Delivered\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t\t}\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</>\n\t)\n}\n\nexport default OrderPage","\nimport React, { useEffect, useState, useContext } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Alert } from 'react-bootstrap'\nimport { useQuery, useMutation } from '@apollo/client';\n\nimport ErrorMessage from '../components/ErrorMessage'\nimport { FETCH_USER_LIST, DELETE_USER, EDIT_ADMIN_STATUS } from '../util/queries';\nimport Meta from '../components/Meta';\n\nconst UserListScreen = ({ history }) => {\n\n\tconst { data, loading, error: queryError } = useQuery(FETCH_USER_LIST)\n\tconst [error, setError] = useState(false)\n\tif (error) setError(queryError)\n\n\tconst [toggleAdmin] = useMutation(EDIT_ADMIN_STATUS, {\n\t\trefetchQueries: [{ query: FETCH_USER_LIST }]\n\t})\n\n\tconst [message, setMessage] = useState(false)\n\tconst [deleteUser] = useMutation(DELETE_USER, {\n\t\tupdate(cache, { data }) {\n\t\t\tif (data.deleteUser === \"not deleted\") {\n\t\t\t\tsetMessage(\"Problem deleting user\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tconst { getUsers: prevUsers } = cache.readQuery({\n\t\t\t\tquery: FETCH_USER_LIST\n\t\t\t});\n\n\t\t\tcache.writeQuery({\n\t\t\t\tquery: FETCH_USER_LIST,\n\t\t\t\tdata: {\n\t\t\t\t\tgetUsers: prevUsers.filter(user => user._id !== data.deleteUser)\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\tonCompleted() {\n\t\t\tsetMessage(<Alert\n\t\t\t\tvariant=\"success\"\n\t\t\t\tonClose={() => setMessage(false)}\n\t\t\t\tstyle={{ width: '30%' }}\n\t\t\t\tclassName='float-right'\n\t\t\t\tdismissible>User Deleted\n\t\t\t\t</Alert>)\n\t\t},\n\t\tonError(err) {\n\t\t\tsetError(err)\n\t\t}\n\t})\n\n\tconst deleteHandler = (id) => {\n\t\tif (window.confirm('Are you sure')) {\n\t\t\tdeleteUser({ variables: { id } })\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Meta title='User List' />\n\t\t\t{error && <ErrorMessage variant='danger' error={error} />}\n\t\t\t<h1>Users</h1>\n\t\t\t{loading ? (\n\t\t\t\t<h1>Loading userslist...</h1> //TODO: Skeleton screens\n\t\t\t) : (\n\t\t\t\t\t<Table striped bordered hover responsive className='table-sm'>\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>ID</th>\n\t\t\t\t\t\t\t\t<th>NAME</th>\n\t\t\t\t\t\t\t\t<th>EMAIL</th>\n\t\t\t\t\t\t\t\t<th>ADMIN</th>\n\t\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{data.getUsers.map(user => (\n\t\t\t\t\t\t\t\t<tr key={user._id}>\n\t\t\t\t\t\t\t\t\t<td>{user._id}</td>\n\t\t\t\t\t\t\t\t\t<td>{user.username}</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<a href={`mailto:${user.email}`}>{user.email}</a>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t{user.isAdmin ? (\n\t\t\t\t\t\t\t\t\t\t\t<i className='fas fa-check' style={{ color: 'green', marginRight: '20px' }}></i>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t<i className='fas fa-times' style={{ color: 'red', marginRight: '20px' }}></i>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t<Button variant='info' className='btn-sm' onClick={() => toggleAdmin({ variables: { id: user._id } })} >\n\t\t\t\t\t\t\t\t\t\t\t<i className='fas fa-edit'></i>\n\t\t\t\t\t\t\t\t\t\t\tEdit Admin Status\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tvariant='danger'\n\t\t\t\t\t\t\t\t\t\t\tclassName='btn-sm'\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => deleteHandler(user._id)}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<i className='fas fa-trash'></i>\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</Table>\n\t\t\t\t)}\n\t\t\t{message}\n\t\t</>\n\t)\n}\n\nexport default UserListScreen","import React, { useContext } from 'react'\nimport { Redirect, Route } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\n\nfunction AdminRoute({ component: Component, redirect, ...rest }) { //renaming component to Component and capturing the rest of the props passed in to AuthRoute under ...rest\n\n\tconst { user } = useContext(AuthContext)\n\n\treturn (\n\t\t<Route\n\t\t\t{...rest}\n\t\t\trender={props =>\n\t\t\t\tuser && user?.isAdmin ? <Component {...props} /> :\n\t\t\t\t\t<Redirect to={redirect} />\n\t\t\t}\n\t\t/>\n\t)\n}\n\nexport default AdminRoute","import React, { useState } from 'react'\nimport { Table, Button, Row, Col, Alert } from 'react-bootstrap'\nimport { useQuery, useMutation } from '@apollo/client'\nimport { Waypoint } from 'react-waypoint'\n\nimport ErrorMessage from '../components/ErrorMessage'\nimport { FETCH_PRODUCTS_QUERY, DELETE_PRODUCT } from '../util/queries'\nimport Meta from '../components/Meta'\n\nconst ProductListScreen = ({ history, match }) => {\n\n\tconst { data, loading, fetchMore } = useQuery(FETCH_PRODUCTS_QUERY)\n\tconst [error, setError] = useState(false)\n\tconst [message, setMessage] = useState(false)\n\tconst [deleteProduct] = useMutation(DELETE_PRODUCT, {\n\t\tupdate(cache, { data }) {\n\t\t\tif (data.deleteUser === \"not deleted\") {\n\t\t\t\tsetMessage(\"Problem deleting user\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tconst { getProducts: prevProducts } = cache.readQuery({\n\t\t\t\tquery: FETCH_PRODUCTS_QUERY\n\t\t\t});\n\n\t\t\tcache.writeQuery({\n\t\t\t\tquery: FETCH_PRODUCTS_QUERY,\n\t\t\t\tdata: {\n\t\t\t\t\tgetProducts: prevProducts.filter(prod => prod.id !== data.deleteProduct)\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\tonCompleted() {\n\t\t\tsetMessage(<Alert\n\t\t\t\tvariant=\"success\"\n\t\t\t\tonClose={() => setMessage(false)}\n\t\t\t\tstyle={{ width: '30%' }}\n\t\t\t\tclassName='float-right'\n\t\t\t\tdismissible>Product Deleted\n\t\t\t\t</Alert>)\n\t\t},\n\t\tonError(err) {\n\t\t\tsetError(err)\n\t\t}\n\t})\n\n\tconst deleteHandler = (id) => {\n\t\tif (window.confirm('Are you sure')) {\n\t\t\tdeleteProduct({ variables: { id } })\n\t\t}\n\t}\n\n\tconst createProductHandler = () => {\n\t\thistory.push('/admin/createproduct')\n\t}\n\tconst editProductHandler = (id) => {\n\t\thistory.push(`/admin/product/edit/${id}`)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Meta title='Product List' />\n\t\t\t{error && <ErrorMessage variant='danger' error={error} />}\n\t\t\t<Row className='align-items-center'>\n\t\t\t\t<Col>\n\t\t\t\t\t<h1>Products</h1>\n\t\t\t\t</Col>\n\t\t\t\t<Col className='text-right'>\n\t\t\t\t\t<Button className='my-3' onClick={createProductHandler}>\n\t\t\t\t\t\t<i className='fas fa-plus'></i> Create Product\n          \t\t\t</Button>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Table striped bordered hover responsive className='table-sm'>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>ID</th>\n\t\t\t\t\t\t<th>NAME</th>\n\t\t\t\t\t\t<th>PRICE</th>\n\t\t\t\t\t\t<th>CATEGORY</th>\n\t\t\t\t\t\t<th>BRAND</th>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{data?.getProducts.map((product, i) => (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<tr key={product.id}>\n\t\t\t\t\t\t\t\t<td>{product.id}</td>\n\t\t\t\t\t\t\t\t<td>{product.name}</td>\n\t\t\t\t\t\t\t\t<td>${product.price}</td>\n\t\t\t\t\t\t\t\t<td>{product.category}</td>\n\t\t\t\t\t\t\t\t<td>{product.brand}</td>\n\t\t\t\t\t\t\t\t<td>\n\n\t\t\t\t\t\t\t\t\t<Button variant='light' className='btn-sm' onClick={() => editProductHandler(product.id)}>\n\t\t\t\t\t\t\t\t\t\t<i className='fas fa-edit'></i>\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tvariant='danger'\n\t\t\t\t\t\t\t\t\t\tclassName='btn-sm'\n\t\t\t\t\t\t\t\t\t\tonClick={() => deleteHandler(product.id)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<i className='fas fa-trash'></i>\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</>\n\t\t\t\t\t))}\n\t\t\t\t</tbody>\n\t\t\t</Table>\n\t\t\t{ (\n\t\t\t\t<Waypoint onEnter={() => fetchMore({\n\t\t\t\t\tvariables: { _id: data?.getProducts[data.getProducts.length - 1].id },\n\t\t\t\t\tupdateQuery: (prev, { fetchMoreResult }) => {\n\t\t\t\t\t\tif (!fetchMoreResult) return\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tgetProducts: [...prev.getProducts, ...fetchMoreResult.getProducts]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})} />\n\t\t\t)}\n\t\t\t{message}\n\t\t\t{/* <Paginate pages={pages} page={page} isAdmin={true} /> */}\n\t\t</>\n\t)\n}\n\nexport default ProductListScreen","import React, { useState, useEffect } from 'react'\nimport { Form, Button, Card } from 'react-bootstrap'\nimport { useMutation } from '@apollo/client'\n\n//import FileUpload from './FileUpload'\nimport { UPLOAD_FILE } from '../util/queries'\n// Import React FilePond\nimport { FilePond, File, registerPlugin } from 'react-filepond'\n\n// Import FilePond styles\nimport 'filepond/dist/filepond.min.css'\n\n// Import the Image EXIF Orientation and Image Preview plugins\n// Note: These need to be installed separately\n// `npm i filepond-plugin-image-preview filepond-plugin-image-exif-orientation --save`\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation'\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview'\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css'\n\n// Register the plugins\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview)\n\n\nconst ProductForm = ({ data, submitHandler }) => {\n\tconst [name, setName] = useState(data?.getProduct?.name || '')\n\tconst [price, setPrice] = useState(data?.getProduct?.price || 0)\n\tconst [image, setImage] = useState(data?.getProduct?.image || '')\n\tconst [files, setFiles] = useState([]) // for handling fileupload\n\tconst [brand, setBrand] = useState(data?.getProduct?.brand || '')\n\tconst [category, setCategory] = useState(data?.getProduct?.category || '')\n\tconst [countInStock, setCountInStock] = useState(data?.getProduct?.countInStock || 0)\n\tconst [description, setDescription] = useState(data?.getProduct?.description || '')\n\tconst [uploading, setUploading] = useState(false)\n\n\tuseEffect(() => {\n\t\tif (files.length !== 0) setImage(false)\n\t}, [files])\n\n\treturn (\n\t\t<div>\n\t\t\t<Form onSubmit={(e) => submitHandler({ e, id: data?.getProduct.id, name, price: Number(price), image: files[0]?.file, brand, category, countInStock: Number(countInStock), description })}>\n\t\t\t\t<Form.Group controlId='name'>\n\t\t\t\t\t<Form.Label>Name</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='name'\n\t\t\t\t\t\tplaceholder={data?.getProduct?.name || 'Enter name'}\n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group controlId='price'>\n\t\t\t\t\t<Form.Label>Price</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tplaceholder={data?.getProduct.price || 'Enter price'}\n\t\t\t\t\t\tvalue={price}\n\t\t\t\t\t\tonChange={(e) => setPrice(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t{/* <Form.Group controlId='image'>\n\t\t\t\t\t<Form.Label>Image</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder={'Enter image url'}\n\t\t\t\t\t\tvalue={image}\n\t\t\t\t\t\tonChange={(e) => setImage(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t\t<Form.File\n\t\t\t\t\t\tid='image-file'\n\t\t\t\t\t\tlabel='Choose File'\n\t\t\t\t\t\tcustom\n\t\t\t\t\t\tonChange={uploadFileHandler}\n\t\t\t\t\t></Form.File>\n\t\t\t\t</Form.Group> */}\n\n\t\t\t\t{image ?\n\t\t\t\t\t<Card.Img src={image} variant='top'></Card.Img> :\n\t\t\t\t\tfalse\n\t\t\t\t}\n\n\t\t\t\t<FilePond\n\t\t\t\t\tfiles={files}\n\t\t\t\t\tonupdatefiles={setFiles}\n\t\t\t\t\t// onupdatefiles={file => setFiles(file[0]?.file)}\n\t\t\t\t\tallowMultiple={false}\n\t\t\t\t\tname=\"files\"\n\t\t\t\t\tlabelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>'\n\t\t\t\t/>\n\n\n\t\t\t\t<Form.Group controlId='brand'>\n\t\t\t\t\t<Form.Label>Brand</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder={data?.getProduct.brand || 'Enter brand'}\n\t\t\t\t\t\tvalue={brand}\n\t\t\t\t\t\tonChange={(e) => setBrand(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group controlId='countInStock'>\n\t\t\t\t\t<Form.Label>Count In Stock</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tplaceholder={data?.getProduct.countInStock || 'Enter countInStock'}\n\t\t\t\t\t\tvalue={countInStock}\n\t\t\t\t\t\tonChange={(e) => setCountInStock(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group controlId='category'>\n\t\t\t\t\t<Form.Label>Category</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder={data?.getProduct.category || 'Enter category'}\n\t\t\t\t\t\tvalue={category}\n\t\t\t\t\t\tonChange={(e) => setCategory(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group controlId='description'>\n\t\t\t\t\t<Form.Label>Description</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder={data?.getProduct.description || 'Enter description'}\n\t\t\t\t\t\tvalue={description}\n\t\t\t\t\t\tonChange={(e) => setDescription(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Button type='submit' variant='primary'>\n\t\t\t\t\tUpdate\n            \t\t</Button>\n\t\t\t</Form>\n\t\t</div>\n\t)\n}\n\nexport default ProductForm\n","import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { useQuery, useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom'\n\nimport { FETCH_PRODUCT_QUERY, EDIT_PRODUCT } from '../util/queries';\nimport ErrorMessage from '../components/ErrorMessage'\nimport FormContainer from '../components/FormContainer'\nimport ProductForm from '../components/ProductForm'\nimport Meta from '../components/Meta';\n\nconst EditProducePage = ({ match, history }) => {\n\tconst productID = match.params.id\n\tconst { data, loading } = useQuery(FETCH_PRODUCT_QUERY, { variables: { productID } })\n\n\tconst [error, setError] = useState(false)\n\n\tconst [editProduct, editLoading] = useMutation(EDIT_PRODUCT, {\n\t\tonCompleted: () => {\n\t\t\thistory.push('/admin/productslist')\n\t\t},\n\t\tonError: (err) => {\n\t\t\tconsole.log(err);\n\t\t\tsetError(<ErrorMessage variant='danger' error={err}></ErrorMessage>)\n\t\t}\n\t})\n\n\tconst submitHandler = ({ e, id, name, price, image, brand, category, countInStock, description }) => {\n\t\te.preventDefault()\n\t\timage = typeof image === 'string' ? undefined : image\n\t\teditProduct({\n\t\t\tvariables: { id, name, price, image, brand, category, countInStock, description }\n\t\t})\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Meta title='Edit Product' />\n\t\t\t<Link to='/admin/productslist' className='btn btn-light my-3'>\n\t\t\t\tGo Back\n      </Link>\n\t\t\t<FormContainer>\n\t\t\t\t{loading ?\n\t\t\t\t\t<h1>Loading...</h1> :\n\t\t\t\t\t<>\n\t\t\t\t\t\t<h1>Edit Product</h1>\n\t\t\t\t\t\t{error}\n\t\t\t\t\t\t<ProductForm data={data} submitHandler={submitHandler}>\n\t\t\t\t\t\t</ProductForm>\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t</FormContainer>\n\t\t</>\n\t)\n}\n\nexport default EditProducePage","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport FormContainer from '../components/FormContainer'\nimport ProductForm from '../components/ProductForm'\nimport { useMutation } from '@apollo/client'\n\nimport ErrorMessage from '../components/ErrorMessage'\nimport { CREATE_PRODUCT, FETCH_PRODUCTS_QUERY } from '../util/queries';\nimport { Alert } from 'react-bootstrap'\nimport Meta from '../components/Meta'\n\nconst CreateProductPage = ({ history }) => {\n\n\tconst [error, setError] = useState(false)\n\n\tconst [createProduct, createLoading] = useMutation(CREATE_PRODUCT, {\n\t\trefetchQueries: [{ query: FETCH_PRODUCTS_QUERY }],\n\t\tonCompleted: () => {\n\t\t\thistory.push('/admin/productslist')\n\t\t},\n\t\tonError: (err) => {\n\t\t\tconsole.log(err);\n\t\t\tsetError(<ErrorMessage variant='danger' error={err}></ErrorMessage>)\n\t\t}\n\t})\n\n\tconst createProductHandler = ({ e, name, price, image, brand, category, countInStock, description }) => {\n\t\te.preventDefault()\n\t\tif (image == null || image.length === 0) return setError(<Alert variant='danger'>Image not properly uploaded</Alert>)\n\t\timage = typeof image === 'string' ? undefined : image\n\t\tcreateProduct({ variables: { name, price, image, brand, category, countInStock, description } })\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<Meta title='Create Product' />\n\t\t\t<Link to='/admin/productslist' className='btn btn-light my-3'>\n\t\t\t\tGo Back\n      \t\t\t</Link>\n\t\t\t<FormContainer>\n\t\t\t\t<h1>Create Product</h1>\n\t\t\t\t{error}\n\t\t\t\t<ProductForm submitHandler={createProductHandler}></ProductForm>\n\t\t\t</FormContainer>\n\t\t</div>\n\t)\n}\n\nexport default CreateProductPage\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useQuery, useMutation } from '@apollo/client';\n\nimport { FETCH_ALL_ORDERS_QUERY } from '../util/queries';\nimport ErrorMessage from '../components/ErrorMessage'\nimport Meta from '../components/Meta';\n\n\nconst OrderListPage = ({ history }) => {\n\n  const { data, loading } = useQuery(FETCH_ALL_ORDERS_QUERY)\n  if (data) console.log(data.getOrders)\n\n  return (\n    <>\n      <Meta title='Order List' />\n      <h1>Orders</h1>\n      <Table striped bordered hover responsive className='table-sm'>\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>USER</th>\n            <th>DATE</th>\n            <th>TOTAL</th>\n            <th>PAID</th>\n            <th>DELIVERED</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {loading ?\n            <h1>Loading...</h1> :\n            data.getOrders.map(order => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user && order.user.username}</td>\n                <td>{order.paymentResult.paidAt}</td>\n                <td>${order.totalPrice}</td>\n                <td>\n                  <i className='fas fa-check' style={{ color: 'green', marginRight: '20px' }}></i>\n                </td>\n                <td>\n                  {order.isDelivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                </td>\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button variant='light' className='btn-sm'>\n                      Details\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </Table>\n    </>\n  )\n}\n\nexport default OrderListPage","import './css/index.css';\nimport './css/bootstrap.min.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport { Container } from 'react-bootstrap';\nimport HomePage from './pages/HomePage'\nimport ProductPage from './pages/ProductPage'\nimport LoginPage from './pages/LoginPage';\nimport CartPage from './pages/CartPage';\nimport { CartContextProvider } from './context/CartContext';\nimport { AuthContextProvider } from './context/AuthContext';\nimport RegisterPage from './pages/RegisterPage';\nimport ProfilePage from './pages/ProfilePage';\nimport AuthRoute from './util/AuthRoute';\nimport ShippingPage from './pages/ShippingPage';\nimport PaymentPage from './pages/PaymentPage';\nimport PlaceOrderPage from './pages/PlaceOrderPage';\nimport OrderPage from './pages/OrderPage';\nimport UserListScreen from './adminPages/UserListPage';\nimport AdminRoute from './util/AdminRoute';\nimport ProductListPage from './adminPages/ProductListPage';\nimport EditProductPage from './adminPages/EditProductPage';\nimport CreateProductPage from './adminPages/CreateProductPage';\nimport OrderListPage from './adminPages/OrderListPage';\n\nconst App = () => {\n  return (\n    <AuthContextProvider>\n      <CartContextProvider>\n        <Router>\n          <Header />\n          <main className='py-3'>\n            <Container>\n              {/* Accessed by anyone */}\n              <Route exact path='/search/:keyword' component={HomePage} />\n              <Route exact path='/' component={HomePage} />\n              <Route path='/login' component={LoginPage} />\n              <Route path='/register' component={RegisterPage} />\n              <Route path='/product/:id' component={ProductPage} />\n              <AuthRoute path='/cart/:id?' component={CartPage} redirect='/login' /> {/* Question mark means the id path is optional because we want to be able to go to cart from a particular product page and by just clciking on the cart icon */}\n              {/* Accessed by logged in users */}\n              <AuthRoute path={'/shipping'} component={ShippingPage} />\n              <AuthRoute path={'/payment'} component={PaymentPage} />\n              <AuthRoute path={'/placeorder'} component={PlaceOrderPage} />\n              <AuthRoute path='/order/:id?' component={OrderPage} redirect='/login' />\n              <AuthRoute path='/profile' component={ProfilePage} redirect='/login' />\n              {/* Accessed by admin users only */}\n              <AdminRoute path='/admin/userlist' component={UserListScreen} redirect='/' />\n              <AdminRoute path='/admin/productslist' component={ProductListPage} redirect='/' />\n              <AdminRoute path='/admin/product/edit/:id' component={EditProductPage} redirect='/' />\n              <AdminRoute path='/admin/createproduct' component={CreateProductPage} redirect='/' />\n              <AdminRoute path='/admin/orderslist' component={OrderListPage} redirect='/' />\n            </Container>\n          </main>\n          <Footer />\n        </Router >\n      </CartContextProvider>\n    </AuthContextProvider>\n  );\n}\n\nexport default App;\n","// Set Apollo Client Provider - provides apolla client to application so we can connect to grpahql server\nimport React from 'react'\nimport App from './App'\nimport { ApolloProvider, InMemoryCache, ApolloClient, from } from '@apollo/client'\n// import { createHttpLink } from \"apollo-link-http\";\nimport { createUploadLink } from \"apollo-upload-client\";\nimport { onError } from \"@apollo/client/link/error\";\nimport { setContext } from \"@apollo/client/link/context\";\n\nconst handleError = onError(({ graphQLErrors, networkError }) => {\n\tif (graphQLErrors)\n\t\tgraphQLErrors.map(({ message, locations, path }) => (\n\t\t\tconsole.log(\"GraphQL error]: Message: \", message) &&\n\t\t\tconsole.log(\"Location: \", locations) &&\n\t\t\tconsole.log(\"Path: \", path))\n\t\t);\n\n\tif (networkError) console.log(`[Network error]: ${networkError}`);\n});\n\nconst httplink = createUploadLink({ uri: 'http://localhost:5000/graphql', credentials: 'include' });\n\nconst authLink = setContext((_, { headers }) => {\n\t// get the authentication token from local storage if it exists\n\tconst token = localStorage.getItem('UserToken');\n\t// return the headers to the context so httpLink can read them => basically creates a header with the user token so that the backend knows who sent the request\n\treturn {\n\t\theaders: {\n\t\t\t...headers,\n\t\t\tauthorization: token ? `Bearer ${token}` : \"\",\n\t\t}\n\t}\n});\n\n// Chaining links together (basically like express middleware)\nconst links = from([\n\thandleError,\n\tauthLink.concat(httplink),\n]);\n\n\nconst client = new ApolloClient({\n\tlink: links,\n\tcache: new InMemoryCache(),\n\t// Enable sending cookies over cross-origin requests\n\tcredentials: 'include'\n});\n\nexport default (\n\t<ApolloProvider client={client}>\n\t\t<App />\n\t</ApolloProvider>\n)","import ReactDOM from 'react-dom';\nimport './css/index.css';\nimport reportWebVitals from './reportWebVitals';\nimport ApolloProvider from './ApolloProvider'\n\n\nReactDOM.render(ApolloProvider, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}